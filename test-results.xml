<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="0.017" tests="23" failures="0">
  <testsuite name="Root Suite" timestamp="2019-03-03T03:43:16" tests="0" failures="0" time="0">
  </testsuite>
  <testsuite name="logger.ts" timestamp="2019-03-03T03:43:16" tests="1" file="/Users/kamip/Repos/logger-js/test/loggerTests.ts" failures="0" time="0.001">
    <testcase name="logger.ts getConsoleLogger()" time="0.001" classname="getConsoleLogger()">
    </testcase>
  </testsuite>
  <testsuite name="getCompositeLogger()" timestamp="2019-03-03T03:43:16" tests="8" file="/Users/kamip/Repos/logger-js/test/loggerTests.ts" failures="0" time="0.006">
    <testcase name="logger.ts getCompositeLogger() with no arguments" time="0" classname="with no arguments">
    </testcase>
    <testcase name="logger.ts getCompositeLogger() with no defined arguments" time="0" classname="with no defined arguments">
    </testcase>
    <testcase name="logger.ts getCompositeLogger() with one defined argument" time="0.001" classname="with one defined argument">
    </testcase>
    <testcase name="logger.ts getCompositeLogger() logInfo()" time="0.003" classname="logInfo()">
    </testcase>
    <testcase name="logger.ts getCompositeLogger() logError()" time="0" classname="logError()">
    </testcase>
    <testcase name="logger.ts getCompositeLogger() logSection()" time="0.001" classname="logSection()">
    </testcase>
    <testcase name="logger.ts getCompositeLogger() logVerbose()" time="0" classname="logVerbose()">
    </testcase>
    <testcase name="logger.ts getCompositeLogger() logWarning()" time="0.001" classname="logWarning()">
    </testcase>
  </testsuite>
  <testsuite name="getAzureDevopsLogger()" timestamp="2019-03-03T03:43:16" tests="3" file="/Users/kamip/Repos/logger-js/test/loggerTests.ts" failures="0" time="0.001">
    <testcase name="logger.ts getAzureDevopsLogger() with no options" time="0" classname="with no options">
    </testcase>
    <testcase name="logger.ts getAzureDevopsLogger() with empty options" time="0" classname="with empty options">
    </testcase>
    <testcase name="logger.ts getAzureDevopsLogger() with toWrap logger" time="0.001" classname="with toWrap logger">
    </testcase>
  </testsuite>
  <testsuite name="InMemoryLogger" timestamp="2019-03-03T03:43:16" tests="3" file="/Users/kamip/Repos/logger-js/test/loggerTests.ts" failures="0" time="0">
    <testcase name="logger.ts InMemoryLogger getInMemoryLogger()" time="0" classname="getInMemoryLogger()">
    </testcase>
    <testcase name="logger.ts InMemoryLogger logInfo()" time="0" classname="logInfo()">
    </testcase>
    <testcase name="logger.ts InMemoryLogger logError()" time="0" classname="logError()">
    </testcase>
  </testsuite>
  <testsuite name="wrapLogger()" timestamp="2019-03-03T03:43:16" tests="2" file="/Users/kamip/Repos/logger-js/test/loggerTests.ts" failures="0" time="0.001">
    <testcase name="logger.ts wrapLogger() with overridden logInfo()" time="0" classname="with overridden logInfo()">
    </testcase>
    <testcase name="logger.ts wrapLogger() with overridden logError()" time="0.001" classname="with overridden logError()">
    </testcase>
  </testsuite>
  <testsuite name="prefix()" timestamp="2019-03-03T03:43:16" tests="3" file="/Users/kamip/Repos/logger-js/test/loggerTests.ts" failures="0" time="0.005">
    <testcase name="logger.ts prefix() with empty string" time="0.001" classname="with empty string">
    </testcase>
    <testcase name="logger.ts prefix() with non-empty string" time="0.001" classname="with non-empty string">
    </testcase>
    <testcase name="logger.ts prefix() with function" time="0.003" classname="with function">
    </testcase>
  </testsuite>
  <testsuite name="indent()" timestamp="2019-03-03T03:43:16" tests="3" file="/Users/kamip/Repos/logger-js/test/loggerTests.ts" failures="0" time="0.003">
    <testcase name="logger.ts indent() with empty string" time="0.001" classname="with empty string">
    </testcase>
    <testcase name="logger.ts indent() with non-empty string" time="0.001" classname="with non-empty string">
    </testcase>
    <testcase name="logger.ts indent() with number" time="0.001" classname="with number">
    </testcase>
  </testsuite>
</testsuites>